# Generated by Django 5.1.6 on 2025-08-19 06:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('content', models.TextField(max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be in format: '+255'", regex='^\\+?255?\\d{9,15}$')])),
                ('name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('Admin', 'Admin'), ('staff', 'staff')], default='user', max_length=40)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeaconSupportRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='Jina kamili')),
                ('description', models.TextField(blank=True, verbose_name='Maelezo')),
                ('assisted_people', models.PositiveIntegerField(default=0, verbose_name='Waliosaidiwa')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Kiasi')),
                ('prayed_for', models.TextField(blank=True, verbose_name='majina ya Ulio waombea')),
                ('challenge_type', models.CharField(max_length=255, verbose_name='Aina ya changamoto')),
                ('people_prayed_for', models.PositiveIntegerField(default=0, verbose_name='idadi ya ulio waombeasource ')),
                ('date', models.DateField(verbose_name='Tarehe')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('ongoing', 'Ongoing')], default='pending', max_length=50, verbose_name='Hali')),
                ('action', models.TextField(blank=True, verbose_name='Hatua')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(error_messages={'unique': 'A department with this name already exists.'}, help_text='Name of the department (must be unique)', max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['department_name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Jina la Vifaa')),
                ('total_quantity', models.PositiveIntegerField(default=0, verbose_name='Idadi Jumla')),
                ('status', models.CharField(choices=[('available', 'Available'), ('unavailable', 'Unavailable'), ('maintenance', 'Under Maintenance')], default='available', max_length=20, verbose_name='Hali')),
                ('functional', models.PositiveIntegerField(default=0, verbose_name='Imara')),
                ('broken', models.PositiveIntegerField(default=0, verbose_name='Vibovu')),
                ('need', models.CharField(blank=True, max_length=255, verbose_name='Uhitaji')),
                ('need_quantity', models.PositiveIntegerField(default=0, verbose_name='Idadi ya Uhitaji')),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Gharama')),
                ('action', models.CharField(choices=[('repair', 'Repair'), ('replace', 'Replace'), ('order', 'Order More'), ('none', 'None')], default='none', max_length=20, verbose_name='Hatua')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('assisted_people', models.PositiveIntegerField(default=0)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prayed_for', models.PositiveIntegerField(default=0)),
                ('challenge_type', models.CharField(max_length=100)),
                ('people_prayed_for', models.PositiveIntegerField(default=0)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='timetable/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phoneNumber', models.CharField(blank=True, max_length=20)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'Regular User'), ('manager', 'Manager')], default='user', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('message sent successfully', 'message  Sent')], default='pending', max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentAssets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='title')),
                ('dateOfAnalysis', models.DateField(blank=True, null=True, verbose_name='date of analysis')),
                ('AssetName', models.CharField(blank=True, max_length=20, null=True, verbose_name='asset name')),
                ('totalNumberOfAssets', models.IntegerField(verbose_name='total number of assets')),
                ('abledAssetsNumber', models.IntegerField(verbose_name='total number of abled assets')),
                ('disabledAssetsNumber', models.IntegerField(verbose_name='total number of disabled assets')),
                ('isRequired', models.CharField(choices=[('is required', 'is required'), ('not required', 'not required')], max_length=20, null=True, verbose_name='is required?')),
                ('perCost', models.IntegerField(null=True, verbose_name='cost per asset')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='api.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Department asset',
                'verbose_name_plural': 'Department Assets',
                'ordering': ['title', 'department'],
                'indexes': [models.Index(fields=['department', 'AssetName'], name='api_departm_departm_aa8fbd_idx')],
            },
        ),
        migrations.CreateModel(
            name='DepartmentContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_order', models.PositiveIntegerField(help_text='The year this content is associated with', verbose_name='Year')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('short_description', models.TextField(validators=[django.core.validators.MinLengthValidator(10)], verbose_name='Description')),
                ('cost', models.DecimalField(decimal_places=2, help_text='Estimated cost in local currency', max_digits=12, verbose_name='Estimated Cost')),
                ('implementation_status', models.CharField(choices=[('completed', 'Completed'), ('in_progress', 'In Progress'), ('incomplete', 'Incomplete')], default='incomplete', max_length=20, verbose_name='Status')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='api.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Department Content',
                'verbose_name_plural': 'Department Contents',
                'ordering': ['-year_order', 'department'],
                'unique_together': {('department', 'year_order')},
            },
        ),
        migrations.CreateModel(
            name='DepartmentMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Full Name')),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mobile Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('baptism_status', models.CharField(choices=[('baptized', 'Baptized'), ('not_baptized', 'Not Baptized')], max_length=20, verbose_name='Baptism Status')),
                ('marital_status', models.CharField(choices=[('in_marriage', 'In Marriage'), ('not_in_marriage', 'Not In Marriage'), ('in_relationship', 'In Relationship')], max_length=20, verbose_name='Marital Status')),
                ('membership_number', models.CharField(help_text='Unique identifier for the member', max_length=50, unique=True, verbose_name='Membership Number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='api.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Department Member',
                'verbose_name_plural': 'Department Members',
                'ordering': ['full_name', 'department'],
                'constraints': [models.UniqueConstraint(fields=('department', 'membership_number'), name='unique_department_membership')],
            },
        ),
        migrations.CreateModel(
            name='DepartmentOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Order Title')),
                ('dateCreated', models.DateField(auto_now_add=True, verbose_name='Date Created')),
                ('dateToImplement', models.DateField(verbose_name='Implementation Deadline')),
                ('howToImplement', models.TextField(verbose_name='Implementation Instructions')),
                ('Requirements', models.TextField(verbose_name='Requirements')),
                ('costToImplement', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Implementation Cost')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Order Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Department Order',
                'verbose_name_plural': 'Department Orders',
                'ordering': ['-dateCreated'],
                'indexes': [models.Index(fields=['department', 'status'], name='api_departm_departm_24626a_idx')],
            },
        ),
        migrations.CreateModel(
            name='DepartmentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Report Title')),
                ('report_type', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annual', 'Annual'), ('special', 'Special')], max_length=20, verbose_name='Report Type')),
                ('report_date', models.DateField(verbose_name='Report Date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('file_upload', models.FileField(blank=True, null=True, upload_to='department_reports/', verbose_name='File Upload')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='api.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Department Report',
                'verbose_name_plural': 'Department Reports',
                'ordering': ['-report_date', 'department'],
                'indexes': [models.Index(fields=['department', 'report_date'], name='api_departm_departm_acd3ef_idx')],
            },
        ),
    ]
